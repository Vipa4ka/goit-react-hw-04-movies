{"version":3,"sources":["Views/Reviews.js"],"names":["Reviews","filmId","useParams","useState","reviews","setReviews","useEffect","Api","then","results","length","map","review","author","content","id"],"mappings":"yOAOe,SAASA,IACpB,IAAQC,EAAWC,cAAXD,OACR,EAA8BE,mBAAS,MAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAQA,OANAC,qBAAU,WACNC,IAAyBN,GACxBO,KAAKH,KACT,CAACJ,IAIE,mCACKG,IACIA,EAAQK,QAAQC,OAAS,EAC1B,6BACKN,EAAQK,QAAQE,KAAI,SAAAC,GAAM,OACvB,+BACI,uCAAQA,EAAOC,UACf,sCAAOD,EAAOE,aAFlB,UAAYF,EAAOG,UAQvB","file":"static/js/9.769f3443.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useParams } from \"react-router-dom\"\r\nimport styles from './Views.module.css'\r\nimport * as Api from '../Services/Api';\r\n\r\n\r\n\r\nexport default function Reviews() {\r\n    const { filmId } = useParams();    \r\n    const [reviews, setReviews] = useState(null);\r\n    \r\n    useEffect(() => {\r\n        Api.fetchRequestForMovie(filmId)\r\n        .then(setReviews)\r\n  }, [filmId]);   \r\n    \r\n    \r\n    return (\r\n        <>\r\n            {reviews && \r\n                (reviews.results.length > 0 ? (\r\n                <ul>\r\n                    {reviews.results.map(review => (\r\n                        <li key={`${review.id}`}>\r\n                            <h3>{`${review.author}`}</h3>\r\n                            <p>{`${review.content}`}</p>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )\r\n                : (\r\n                    <p >\r\n                       We don't have any reviews for this movie.\r\n                    </p>\r\n                    )\r\n                )\r\n            }\r\n        </>    \r\n        \r\n    )   \r\n    \r\n\r\n\r\n};"],"sourceRoot":""}