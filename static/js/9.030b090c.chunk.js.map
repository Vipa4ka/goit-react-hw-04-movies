{"version":3,"sources":["Views/Reviews.js"],"names":["Reviews","filmId","useParams","useState","reviews","setReviews","useEffect","Api","then","results","length","map","review","author","content","id"],"mappings":"iOAIe,SAASA,IACtB,IAAQC,EAAWC,cAAXD,OACR,EAA8BE,mBAAS,MAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,qBAAU,WACRC,IAAyBN,GAAQO,KAAKH,KACrC,CAACJ,IAGF,mCACGG,IACEA,EAAQK,QAAQC,OAAS,EACxB,6BACGN,EAAQK,QAAQE,KAAI,SAACC,GAAD,OACnB,+BACE,uCAAQA,EAAOC,UACf,sCAAOD,EAAOE,aAFhB,UAAYF,EAAOG,UAOvB","file":"static/js/9.030b090c.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport * as Api from \"../Services/Api\";\n\nexport default function Reviews() {\n  const { filmId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    Api.fetchRequestForMovie(filmId).then(setReviews);\n  }, [filmId]);\n\n  return (\n    <>\n      {reviews &&\n        (reviews.results.length > 0 ? (\n          <ul>\n            {reviews.results.map((review) => (\n              <li key={`${review.id}`}>\n                <h3>{`${review.author}`}</h3>\n                <p>{`${review.content}`}</p>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>We don't have any reviews for this movie.</p>\n        ))}\n    </>\n  );\n}\n"],"sourceRoot":""}